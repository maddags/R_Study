dat <- data("AirPassengers")
force(AirPassengers)
ts(data = dat)
ts(data = dat, start = 1949, end = 1960, frequency = 12)
ts(data = AirPassengers, start = c(1949,1))
ts(data = AirPassengers, start = c(1949,1) end = c(1960,12), frequency =12)
ts(data = AirPassengers, start = c(1949,1), end = c(1960,12), frequency =12)
ts_1 <- ts(data = AirPassengers, start = c(1949,1), end = c(1960,12), frequency =12)
plot(ts_1)
plot(ts_1, ann = F)
plot(ts_1, ann = F,
main = "비정상적 데이터")
plot(ts_1,
main = "비정상적 데이터")
plot(ts_1,
main = "비정상적 데이터",
ylab = "승객 수")
diff(ts_1)
ts_2 <- diff(ts_1)
plot(ts_2,
main = "비정상적 데이터",
ylab = "승객 수"
)
plot(ts_1,ann = F
main = "비정상적 데이터",
ylab = "승객 수"
)
plot(ts_1,ann = F,
main = "비정상적 데이터"
)
plot(ts_1,
main = "비정상적 데이터",
ann = F
)
plot(ts_1,
ann = F
)
plot(plot(ts_1,
ann = F
), main = "Asd"
)
plot(ts_1,
main =" 정상성 데이터",
ylab=""
)
plot(ts_2,
main = "비정상적 데이터",
ylab = ""
)
ts_3 <- log(ts_1)
plot(ts_3,
main = "비정상적 데이터",
ylab = ""
)
ts_4 <- diff(ts_3)
plot(ts_4,
main = "비정상적 데이터",
ylab = ""
)
plot(ts_1,
main =" 비정상성 데이터",
ylab=""
)
plot(ts_2,
main = "일정한 평균 데이터",
ylab = ""
)
plot(ts_3,
main = "일정한 분산 데이터",
ylab = ""
)
plot(ts_4,
main = "정상성 데이터",
ylab = ""
)
grid.arrange(plot(ts_1,main =" 비정상성 데이터",ylab=""),
plot(ts_2,main =" 일정한 평균 데이터",ylab=""),
plot(ts_3,main =" 일정한 분산 데이터",ylab=""),
plot(ts_4,main =" 정상성 데이터",ylab="")
)
library(gridExtra)
grid.arrange(plot(ts_1,main =" 비정상성 데이터",ylab=""),
plot(ts_2,main =" 일정한 평균 데이터",ylab=""),
plot(ts_3,main =" 일정한 분산 데이터",ylab=""),
plot(ts_4,main =" 정상성 데이터",ylab="")
)
plot(ts_3,
main = "일정한 분산 데이터",
ylab = ""
)
decompose(AirPassengers)
acf(ts_4)
pacf(ts_4)
acf(vec_diff, lag.max = 50)
set.seed(123)
vec <- numeric(0)
n = 1000
vec <- rnorm(1)
for(i in 1:n)
vec <- c(vec, vec[length(vec)] + rnorm(1, mean = , sd = 1))
vec_diff <- diff(vec)
acf(vec_diff, lag.max = 50)
pacf(vec_diff, lag.max = 50)
acf(vec_diff, lag.max = 50)
vec_diff <- diff(vec, dif)
acf(vec_diff, lag.max = 50)
set.seed(123)
vec <- numeric(0)
n = 1000
vec <- rnorm(1)
for(i in 1:n)
vec <- c(vec, vec[length(vec)] + rnorm(1, mean = , sd = 1))
plot(vec)
vec_diff <- diff(vec, dif)
diff(vec , differences = 1)
plot(diff(vec , differences = 1))
plot(diff(vec , differences = 1), type = "l")
plot(diff(vec, differences =  2), type = "l")
acf(vec_diff, lag.max = 50)
vec_diff <- diff(vec, differences = 1)
plot(vec_diff, type = "l")
acf(vec_diff, lag.max = 50)
pacf(vec_diff, lag.max = 50)
acf(vec_diff, lag.max = 50)
par(nfrow = c(1,2))
acf(vec_diff, lag.max = 50)
pacf(vec_diff, lag.max = 50)
par(mfrow = c(1,2))
acf(vec_diff, lag.max = 50)
pacf(vec_diff, lag.max = 50)
par(mfrow = c(1,2))
acf(vec_diff, lag.max = 50)
pacf(vec_diff, lag.max = 50)
set.seed(123)
vec <- numeric(0)
n = 1000
vec <- rnorm(1)
for(i in 1:n)
vec <- c(vec, vec[length(vec)] + rnorm(1, mean = , sd = 1))
vec_diff <- diff(vec, differences = 1)
install.packages("ts")
library(ts)
library(ts)
install.packages("forecast")
library(forecast)
auto.arima(vec)
arima(data = vec, order = c(0,1,1))
melsyd
data(melsyd)
data
data()
LakeHuron
summary(LakeHuron)
str(LakeHuron)
dt1 <- rnorm(100)
dt1 <- numeric(0)
dt1 <- numeric(0)
n = 240
for(i in 1:n)
dt1 <- c(dt1, length([dt1]) + rnorm(1))
dt1 <- 500
n = 240
for(i in 1:n)
dt1 <- c(dt1, length([dt1]) + rnorm(1))
dt1 <- c(dt1, dt1[length([dt1])] + rnorm(1))
dt1 <- c(dt1, dt1[length(dt1)] + rnorm(1))
for(i in 1:n)
dt1 <- c(dt1, dt1[length(dt1)] + rnorm(1))
dt1
dt1 <- 500
n = 240
for(i in 1:n)
dt1 <- c(dt1, dt1[length(dt1)] + rnorm(1, mean = 10, sd = 2))
dt1
dt1 <- c(dt1, dt1[length(dt1)] + rnorm(1, mean = 0, sd = 2))
dt1
n = 240
for(i in 1:n)
dt1 <- c(dt1, dt1[length(dt1)] + rnorm(1, mean = 0, sd = 2))
dt1
n = 240
for(i in 1:n)
dt1 <- c(dt1, dt1[length(dt1)] + rnorm(1, mean = 10, sd = 2))
dt1
dt1 <- 500
for(i in 1:n)
dt1 <- c(dt1, dt1[length(dt1)] + rnorm(1, mean = 0, sd = 2))
dt1
dt1 <- c(dt1, dt1[length(dt1)] + rnorm(1, mean = -1, sd = 2))
dt1
dt1 <- c(dt1, dt1[length(dt1)] + rnorm(1, mean = 1, sd = 6))
dt1
set.seed(100)
dt1 <- numeric(0)
dt1 <- 500
n = 240
for(i in 1:n)
dt1 <- c(dt1, dt1[length(dt1)] + rnorm(1, mean = 1, sd = 6))
dt1
ts(dt1, start = c(2020,1), frequency = 4)
plot(dt1)
dt1 <- ts(dt1, start = c(2020,1), frequency = 4)
plot(dt1)
plot(dt1, type = "l")
acf(dt1, max.lag = 30)
acf(dt1)
plot(dt1, type = "l")
dt1_diff <- diff(dt1, differences = 1)
dt1_diff
plot(dt1_diff, type = "l")
plot(dt1_diff, type = "l") +
line(x = 2020:2080, y = mean(dt1_diff))
library(dplyr)
library(forecast)
str(dt1_diff)
acf(dt1_diff)
str(acf(dt1_diff))
summary(acf(dt1_diff))
library(dplyr)
library(forecast)
par(mfrow = c(1,2))
dt1 %>% diff(lag = 1) %>% ggtsdisplay()
dt1 %>% diff(lag = 1) %>% ggtsdisplay()
dt1 %>% diff(lag = 2) %>% ggtsdisplay()
dt1 %>% diff(lag = 1) %>% diff(lag = 1) %>%  ggtsdisplay()
dt1 %>% diff(lag = 2) %>%  ggtsdisplay()
library(dplyr)
library(forecast)
par(mfrow = c(1,2))
dt1 %>% diff(lag = 1) %>% ggtsdisplay()
dt1 %>% diff(lag = 1) %>% ggtsdisplay()
arima(dt1, order = c(1,1,0))
arima(dt1, order = c(1,1,1))
arima(Dtq, order = c(1,1,1))
auto.arima(dt1)
dt1_decompose <- decompose(dt1)
plot(dt1_decompose)
dt1_decompose <- decompose(dt1)
plot(dt1_decompose)
dt1_non_seasonal <- dt1 - dt1_decompose$seasonal
dt1_non_trend <- dt1 - dt1_decompose$trend
dt1_non_random <- dt1 - dt1_decompose$random
plot(dt1_non_seasonal, type = "l")
plot(dt1_non_trend, type = "l")
source('~/.active-rstudio-document', echo=TRUE)
plot(dt1_non_random, type = "l")
plot(dt1_non_seasonal, type = "l")
plot(dt1_non_random, type = "l")
plot(dt1_non_trend, type = "l")
plot(dt1_decompose)
plot(dt1_decompose)
plot(dt1_non_trend, type = "l")
plot(dt1_non_random, type = "l")
plot(dt1_non_seasonal, type = "l")
dt1_no_seasonal <- diff(dt1_no_seasonal, differences = 1)
plot(dt1_no_seasonal, type = "l", ylab = "")
dt1_non_seasonal2 <- diff(dt1_non_seasonal, differences = 1)
plot(dt1_non_seasonal2, type = "l", ylab = "")
dt1_non_seasonal <- dt1 - dt1_decompose$seasonal
dt1_non_seasonal2 <- diff(dt1_non_seasonal, differences = 1)
plot(dt1_non_seasonal2, type = "l", ylab = "")
plot(dt1_non_seasonal, type = "l")
plot(dt1_non_seasonal2, type = "l", ylab = "")
plot(dt1_non_seasonal2, type = "l", ylab = "",main = "diff(1)")
ggtsdisplay(dt1_non_seasonal2)
dt1 %>% diff(lag = 1) %>% ggtsdisplay()
