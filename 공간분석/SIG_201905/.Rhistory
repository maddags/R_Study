library(maps)
library(mapdata)
library(mapproj)
map(database = "worldHires", region = c("South korea","North korea"))
map(database = "world", region = c("South korea","North korea"))
map(database = "worldHires", region = c("South korea"), col = "blue")
map(database = "worldHires", region = c("South korea"), col = "blue", add = T)
map(database = "worldHires", region = c("South korea"), col = "blue", add = F)
map(database = "worldHires", region = c("South korea"), col = "blue", add = T, fill = T)
map(database = "worldHires", region = c("South korea"), col = "blue", add = T, fill = F)
map(database = "worldHires", region = c("South korea"), col = "blue", add = F, fill = T)
map(database = "worldHires", region = c("South korea"), col = "blue", add = F, FILL = F)
par(mfrow = c(2,2))
(map(database = "worldHires", region = c("South korea"), col = "blue", add = T, fill = T)
map(database = "worldHires", region = c("South korea"), col = "blue", add = T, fill = F)
map(database = "worldHires", region = c("South korea"), col = "blue", add = F, fill = T)
map(database = "worldHires", region = c("South korea"), col = "blue", add = F, FILL = F)
)
(
map(database = "worldHires", region = c("South korea"), col = "blue", add = T, fill = T)
map(database = "worldHires", region = c("South korea"), col = "blue", add = T, fill = F)
map(database = "worldHires", region = c("South korea"), col = "blue", add = F, fill = T)
map(database = "worldHires", region = c("South korea"), col = "blue", add = F, FILL = F)
)
par(mfrow = c(2,2))
(
map(database = "worldHires", region = c("South korea"), col = "blue", add = T, fill = T)
map(database = "worldHires", region = c("South korea"), col = "blue", add = T, fill = F)
map(database = "worldHires", region = c("South korea"), col = "blue", add = F, fill = T)
map(database = "worldHires", region = c("South korea"), col = "blue", add = F, FILL = F)
)
par(mfrow = c(2,2))
map(database = "worldHires", region = c("South korea"), col = "blue", add = T, fill = T)
map(database = "worldHires", region = c("South korea"), col = "blue", add = T, fill = F)
map(database = "worldHires", region = c("South korea"), col = "blue", add = F, fill = T)
map(database = "worldHires", region = c("South korea"), col = "blue", add = F, FILL = F)
map(database = "worldHires", region = c("South korea"), col = "blue", add = T, fill = T)
par(mfrow = c(2,2))
map(database = "worldHires", region = c("South korea"), col = "blue", add = T, fill = T)
par(mfrow = c(1,1))
map(database = "worldHires", region = c("South korea"), col = "blue", add = T, fill = T)
map(database = "worldHires", region = c("South korea"), col = "blue", add = T, fill = T)
library(maps)
library(mapdata)
library(mapproj)
#par(mfrow = c(1,1))
map(database = "worldHires", region = c("South korea"), col = "blue", add = T, fill = T)
map(database = "worldHires", region = c("South korea","North korea"))
#par(mfrow = c(1,1))
map(database = "worldHires", region = c("South korea"), col = "blue", add = T, fill = T)
map(database = "worldHires", region = c("South korea"), col = "blue", add = T, fill = F)
map(database = "worldHires", region = c("South korea"), col = "blue", add = F, fill = T)
map(database = "worldHires", region = c("South korea"), col = "blue", add = F, FILL = F)
map(database = "worldHires", region = c("South korea"), col = "blue", add = F, fill = T)
map(database = "worldHires", region = c("South korea"), col = "blue", add = F, FILL = F)
map(database = "worldHires", region = c("South korea"), col = "blue", add = F, fill = F)
map(database = "worldHires", region = c("South korea"), col = "blue", add = F, fill = T)
map(database = "worldHires", region = c("South korea"), col = "blue", add = F, fill = F)
map(database = "worldHires", region = c("South korea"), col = "blue", add = T, fill = F)
#par(mfrow = c(1,1))
map(database = "worldHires", region = c("South korea"), col = "blue", add = T, fill = T)
map(database = "worldHires", region = c("South korea"), col = "blue", add = F, fill = F)
#par(mfrow = c(1,1))
map(database = "worldHires", region = c("South korea"), col = "blue", add = T, fill = T)
map(database = "worldHires", region = c("South korea"), col = "blue", add = F, fill = T)
map(database = "worldHires", region = c("South korea"), col = "blue", add = T, fill = F)
#par(mfrow = c(1,1))
map(database = "worldHires", region = c("South korea"), col = "blue", add = T, fill = T)
map(database = "worldHires", region = c("South korea"), col = "blue", add = F, fill = F)
map(database = "worldHires", region = c("South korea"), col = "blue", add = F, fill = T)
map(database = "worldHires", region = c("South korea"), col = "blue", add = F, fill = F)
map(database = "worldHires", region = c("South korea"), col = "blue", add = T, fill = F)
map(database = "worldHires", region = c("South korea"), col = "blue", add = F, fill = F)
map(database = "worldHires", region = c("South korea"), col = "blue", add = T, fill = F)
map(database = "worldHires", region = c("South korea"), col = "blue", add = F, fill = T)
#par(mfrow = c(1,1))
map(database = "worldHires", region = c("South korea"), col = "blue", add = T, fill = T)
map(database = "worldHires", region = c("South korea"), col = "blue", add = T, fill = F)
map(database = "worldHires", region = c("South korea"), col = "blue", add = F, fill = F)
map(database = "worldHires", region = c("South korea"), col = "blue", add = T, fill = F)
map(database = "worldHires", region = c("South korea"), col = "blue", add = F, fill = T)
map(database = "worldHires", region = c("Noreth korea"), col = "red", add = T, fill = T)
#par(mfrow = c(1,1))
map(database = "worldHires", region = c("South korea"), col = "blue", add = T, fill = T)
map(database = "worldHires", region = c("Noreth korea"), col = "red", add = T, fill = T)
map(database = "worldHires", region = c("South korea","North korea"))
#par(mfrow = c(1,1))
map(database = "worldHires", region = c("South korea"), col = "blue", add = T, fill = T)
map(database = "worldHires", region = c("Noreth korea"), col = "red", add = T, fill = T)
map(database = "worldHires", region = c("North korea"), col = "red", add = T, fill = T)
library(maps)
library(mapdata)
library(mapproj)
library(ggmap)
register_google(key = "AIzaSyDtnZaVt1HnJJECViCLH7vOAAlK5OLpZAg")
ggmap(get_map(location="south korea",zoom = 7))
ggmap(get_map(location="sorth korea",zoom = 10, source = "google", "watercolor"))
ggmap(get_map(location="sorth korea", zoom = 10, source = "google", maptype = "watercolor"))
ggmap(get_map(location="sorth korea", zoom = 10, source = "google", maptype = "satellite"))
ggmap(get_map(location="sorth korea", zoom = 7, source = "google", maptype = "satellite"))
ggmap(get_map(location="sorth korea", zoom = 7, source = "google", maptype = "tonor"))
ggmap(get_map(location="sorth korea", zoom = 7, source = "google", maptype = "watercolor"))
ggmap(get_map(location="sorth korea", zoom = 7, source = "google", maptype = "toner"))
install.packages("raster")
library(raster)
getData(name = "GADM", country = "kor", level = 2)
kor <- getData(name = "GADM", country = "kor", level = 2)
View(kor)
ggplot(kor) +
geom_polygon(aes(x = long, y = lat, group = group ), fill = "white")
ggplot(kor) +
geom_polygon(aes(x = long, y = lat, group = group ), fill = "white",color = "black")
library(maps)
library(mapdata)
library(mapproj)
library(ggmap)
library(raster)
map(database = "worldHires", region = c("South korea","North korea"))
title("Korea")
#par(mfrow = c(1,1))
map(database = "worldHires", region = c("South korea"), col = "blue", add = T, fill = T)
map(database = "worldHires", region = c("North korea"), col = "red", add = T, fill = T)
ggmap(get_map(location="south korea",zoom = 7))
register_google(key = "AIzaSyDtnZaVt1HnJJECViCLH7vOAAlK5OLpZAg")
ggmap(get_map(location="south korea",zoom = 7))
library(readxl)
setwd("~/동아리/R문서(개인)/공간분석")
wifi <- read_csv("~/동아리/R문서(개인)/공간분석/wifi.csv")
wifi <- read.csv("~/동아리/R문서(개인)/공간분석/wifi.csv")
View(wifi)
ggmap(get_map(location="sorth korea", zoom = 7, source = "google", maptype = "toner"))
kor <- getData(name = "GADM", country = "kor", level = 2)
ggmap(get_map(location = "sorth korea", mapytpe = "rodamap", zoom = 7, source = google, color = "bw"))
ggmap(get_map(location = "sorth korea", mapytpe = "rodamap", zoom = 7, source = "google", color = "bw"))
map <- get_map(location = "sorth korea", mapytpe = "rodamap", zoom = 7, source = "google", color = "bw"))
map <- get_map(location = "sorth korea", mapytpe = "rodamap", zoom = 7, source = "google", color = "bw")
map
map
ggplot(map) + geom_point(data= wifi, aes(x = lon, y = lat, group = company))
ggmap(map) + geom_point(data= wifi, aes(x = lon, y = lat, group = company))
ggmap(map) + geom_point(data= wifi, aes(x = lon, y = lat, color = company))
ggmap(get_map(location = "seoul", zoom = 7, source = "google", maptype = "roadmap", color = "bw"))
ggmap(get_map(location = "seoul", zoom = 6, source = "google", maptype = "roadmap", color = "bw"))
ggmap(get_map(location = "seoul", zoom = 10, source = "google", maptype = "roadmap", color = "bw"))
ggmap(get_map(location = "seoul", zoom = 11, source = "google", maptype = "roadmap", color = "bw"))
seoul <- get_map(location = "seoul", zoom = 11, source = "google", maptype = "roadmap", color = "bw")
View(wifi)
seoul_wifi <- wifi[wifi$lat > 37.4 & wifi$lat < 38 & wifi$lon > 126.8 & wifi$lon < 127.5, ]
View(seoul_wifi)
ggmap(seoul) + geom_point(data = seoul_wifi, aes(x = lon, y = lat, color = company), alpha = 0.5) +
scale_color_brewer(palette = "#CC0000","#FFFF33","#006633")
ggmap(seoul) + geom_point(data = seoul_wifi, aes(x = lon, y = lat, color = company), alpha = 0.5) +
scale_color_brewer(palette = "#009900","#FFFF00","#FF3333")
ggmap(seoul) + geom_point(data = seoul_wifi, aes(x = lon, y = lat, color = company), alpha = 0.5) +
scale_color_brewer(palette = "#009933","#FFFF00","#FF3333")
ggmap(seoul) + geom_point(data = seoul_wifi, aes(x = lon, y = lat, color = company), alpha = 0.5) +
scale_color_brewer(palette = "#6666CC","#FFFF00","#FF3333")
ggmap(seoul) + geom_point(data = seoul_wifi, aes(x = lon, y = lat, color = company), alpha = 0.5) +
scale_color_brewer(palette = "#6666cc","#FFFF00","#FF3333")
ggmap(seoul) + geom_point(data = seoul_wifi, aes(x = lon, y = lat, color = company), alpha = 0.5) +
scale_color_brewer(palette = "Set1")
seoul <- get_map(location = "seoul", zoom = 12, source = "google", maptype = "roadmap", color = "bw")
ggmap(seoul) + geom_point(data = seoul_wifi, aes(x = lon, y = lat, color = company), alpha = 0.5) +
scale_color_brewer(palette = "Set1")
seoul <- get_map(location = "seoul", zoom = 11.5, source = "google", maptype = "roadmap", color = "bw")
seoul <- get_map(location = "seoul", zoom = 11, source = "google", maptype = "roadmap", color = "bw")
ggmap(seoul) + geom_point(data = seoul_wifi, aes(x = lon, y = lat, color = company), alpha = 0.5) +
scale_color_brewer(palette = "Set1")
library(maps)
library(mapdata)
library(mapproj)
library(ggmap)
library(raster)
library(readxl)
map(database = "worldHires", region = c("South korea","North korea"))
title("Korea")
#par(mfrow = c(1,1))
map(database = "worldHires", region = c("South korea"), col = "blue", add = T, fill = T)
map(database = "worldHires", region = c("North korea"), col = "red", add = T, fill = T)
register_google(key = "AIzaSyDtnZaVt1HnJJECViCLH7vOAAlK5OLpZAg")
ggmap(get_map(location="sorth korea", zoom = 7, source = "google", maptype = "toner"))
kor <- getData(name = "GADM", country = "kor", level = 2)
View(kor)
ggplot(kor) +
geom_polygon(aes(x = long, y = lat, group = group ), fill = "white",color = "black")
wifi <- read.csv("~/동아리/R문서(개인)/공간분석/wifi.csv")
map <- get_map(location = "sorth korea", mapytpe = "rodamap", zoom = 7, source = "google", color = "bw")
seoul <- get_map(location = "seoul", zoom = 11, source = "google", maptype = "roadmap", color = "bw")
seoul_wifi <- wifi[wifi$lat > 37.4 & wifi$lat < 38 & wifi$lon > 126.8 & wifi$lon < 127.5, ]
ggmap(seoul) + geom_point(data = seoul_wifi, aes(x = lon, y = lat, color = company), alpha = 0.5) +
scale_color_brewer(palette = "Set1")
setwd("~/동아리/R문서(개인)/공간분석")
bike <- read_excel("~/동아리/R문서(개인)/공간분석/전국자전거보관소표준데이터.xls")
View(bike)
seoul_bike <- bike[bike$위도 > 37.4 & bike$위도 < 38 & bike$경도 126.8, bike$경도 < 127.5,]
seoul_bike <- bike[bike$위도 > 37.4 & bike$위도 < 38 & bike$경도 > 126.8, bike$경도 < 127.5,]
seoul_bike <- bike[bike$위도 > 37.4 & bike$위도 < 38 & bike$경도 > 126.8 & bike$경도 < 127.5,]
View(seoul_bike)
seoul_bike <- seoul_bike[,c(4,5,17)]
seoul_bike
seoul_bike <- seoul_bike[,c(17,4,5)]
seoul_bike <- bike[bike$위도 > 37.4 & bike$위도 < 38 & bike$경도 > 126.8 & bike$경도 < 127.5,]
seoul_bike <- seoul_bike[,c(17,4,5)]
View(seoul_bike)
seoul_bike <- bike[bike$위도 > 37.4 & bike$위도 < 38 & bike$경도 > 126.8 & bike$경도 < 127.5,]
seoul_bike <- seoul_bike[,c(17,4,5,6)]
ggmap(seoul) + geom_point(data= seoul_bike, aes(x = 위도, y = 경도, color = 보관대수), alpha = 0.3)
ggmap(seoul) + geom_point(data= seoul_bike, aes(x = 위도, y = 경도, color = 제공기관명명), alpha = 0.3)
ggmap(seoul) + geom_point(data= seoul_bike, aes(x = 위도, y = 경도, color = 제공기관명), alpha = 0.3)
str(seoul_bike)
seoul_bike$위도 <- as.numeric(seoul_bike$위도)
str(seoul_bike)
seoul_bike$경도 <- as.numeric(seoul_bike$경도)
seoul_bike$보관대수 <- as.numeric(seoul_bike$보관대수)
str(seoul_bike)
ggmap(seoul) + geom_point(data= seoul_bike, aes(x = 위도, y = 경도, color = 제공기관명), alpha = 0.3)
ggmap(seoul) + geom_point(data= seoul_bike, aes(x = 위도, y = 경도, color = 보관대수), alpha = 0.3)
ggmap(seoul) + geom_point(data= seoul_bike, aes(x = 위도, y = 경도, color = 보관대수), alpha = 0.5)
ggmap(seoul) + geom_point(data= seoul_bike, aes(x = 위도, y = 경도, color = 보관대수), alpha = 1)
ggmap(seoul) + geom_point(data= seoul_bike, aes(x = 위도, y = 경도), alpha = 1)
str(seoul_wifi)
str(seoul_bike)
str(seoul_wifi)
str(seoul_bike)
ggmap(seoul) + geom_point(data= seoul_bike, aes(x = 위도, y = 경도))
ggmap(seoul) + geom_point(data = seoul_wifi, aes(x = lon, y = lat, color = company), alpha = 0.5) +
scale_color_brewer(palette = "Set1")
seoul_bike$제공기관명 <- as.factor(seoul_bike$제공기관명)
str(seoul_bike)
ggmap(seoul) + geom_point(data= seoul_bike, aes(x = 위도, y = 경도))
ggmap(seoul) + geom_point(data= seoul_bike, aes(x = 위도, y = 경도,color = 제공기관명))
ggmap(seoul) + geom_point(data= seoul_bike, aes(x = 위도, y = 경도, color = 보관대수)) +
scale_color_brewer(palette = "Set1")
ggmap(seoul) + geom_point(data= seoul_bike, aes(x = 위도, y = 경도, color = 보관대수))
ggmap(map) + geom_point(data= seoul_bike, aes(x = 위도, y = 경도, color = 보관대수))
ggmap(map) + geom_point(data= bike, aes(x = 위도, y = 경도, color = 보관대수))
bike$위도 <- as.numeric(bike$위도)
bike$경도 <- as.numeric(bike$경도)
ggmap(map) + geom_point(data= bike, aes(x = 위도, y = 경도, color = 보관대수))
bike$보관대수 <- as.numeric(bike$보관대수)
ggmap(map) + geom_point(data= bike, aes(x = 위도, y = 경도, color = 보관대수))
ggmap(seoul) + geom_point(data = seoul_wifi, aes(x = lon, y = lat, color = company), alpha = 0.5) +
scale_color_brewer(palette = "Set1")
bike <- read.csv("~/동아리/R문서(개인)/공간분석/전국자전거보관소표준데이터.csv")
bike <- read.csv("~/동아리/R문서(개인)/공간분석/전국자전거보관소표준데이터.csv")
bike <- read.csv("~/동아리/R문서(개인)/공간분석/전국자전거보관소표준데이터.csv")
bike <- read.csv("~/동아리/R문서(개인)/공간분석/전국자전거보관소표준데이터.csv", header = T)
View(wifi)
library(maps)
library(mapdata)
library(mapproj)
library(ggmap)
library(raster)
library(readxl)
bike <- read.csv("~/동아리/R문서(개인)/공간분석/전국자전거보관소표준데이터.csv", )
bike <- read.csv("~/동아리/R문서(개인)/공간분석/전국자전거보관소표준데이터.csv", )
bike <- read.csv("~/동아리/R문서(개인)/공간분석/전국자전거보관소표준데이터.csv", )
bike <- read.csv("~/동아리/R문서(개인)/공간분석/전국자전거보관소표준데이터.csv")
bike <- read.csv("~/동아리/R문서(개인)/공간분석/전국자전거보관소표준데이터.csv", fileEncoding = "euc-kr")
bike <- read.csv("~/동아리/R문서(개인)/공간분석/전국자전거보관소표준데이터.csv", fileEncoding = "euc-kr")
View(bike)
bike <- read.csv("~/동아리/R문서(개인)/공간분석/전국자전거보관소표준데이터.csv")
bike <- read_excel("~/동아리/R문서(개인)/공간분석/전국자전거보관소표준데이터.xls")
View(bike)
seoul_bike <- bike[bike$위도 > 37.4 & bike$위도 < 38 & bike$경도 > 126.8 & bike$경도 < 127.5,]
seoul_bike <- seoul_bike[,c(17,4,5,6)]
seoul_bike$제공기관명 <- as.factor(seoul_bike$제공기관명)
seoul_bike$위도 <- as.numeric(seoul_bike$위도)
seoul_bike$경도 <- as.numeric(seoul_bike$경도)
seoul_bike$보관대수 <- as.numeric(seoul_bike$보관대수)
str(seoul_bike)
bike$위도 <- as.numeric(bike$위도)
bike$경도 <- as.numeric(bike$경도)
bike$보관대수 <- as.numeric(bike$보관대수)
ggmap(map) + geom_point(data= bike, aes(x = 위도, y = 경도, color = 보관대수))
ggmap(seoul) + geom_point(data = seoul_wifi, aes(x = lon, y = lat, color = company), alpha = 0.5) +
scale_color_brewer(palette = "Set1")
bike <- read_excel("~/동아리/R문서(개인)/공간분석/전국자전거보관소표준데이터.xls")
View(bike)
str(bike)
seoul_bike <- bike[bike$위도 > 37.4 & bike$위도 < 38 & bike$경도 > 126.8 & bike$경도 < 127.5,]
seoul_bike <- seoul_bike[,c(17,4,5,6)]
seoul_bike$제공기관명 <- as.factor(seoul_bike$제공기관명)
seoul_bike$위도 <- as.numeric(seoul_bike$위도)
seoul_bike$경도 <- as.numeric(seoul_bike$경도)
seoul_bike$보관대수 <- as.numeric(seoul_bike$보관대수)
str(seoul_bike)
ggmap(seoul)
ggmap(seoul) + geom_point(data = seoul_bike, aes(x = 위도, y = 경도))
rm(list = ls())
library(maps)
library(mapdata)
library(mapproj)
library(ggmap)
library(raster)
library(readxl)
register_google(key = "AIzaSyDtnZaVt1HnJJECViCLH7vOAAlK5OLpZAg")
bike <- read_excel("~/동아리/R문서(개인)/공간분석/전국자전거보관소표준데이터.xls")
str(bike)
seoul_bike <- bike[bike$위도 > 37.4 & bike$위도 < 38 & bike$경도 > 126.8 & bike$경도 < 127.5,]
seoul_bike <- seoul_bike[,c(17,4,5,6)]
seoul_bike$제공기관명 <- as.factor(seoul_bike$제공기관명)
seoul_bike$위도 <- as.numeric(seoul_bike$위도)
seoul_bike$경도 <- as.numeric(seoul_bike$경도)
seoul_bike$보관대수 <- as.numeric(seoul_bike$보관대수)
str(seoul_bike)
seoul_bike$위도 <- as.integer(seoul_bike$위도)
str(seoul_bike)
seoul_bike <- bike[bike$위도 > 37.4 & bike$위도 < 38 & bike$경도 > 126.8 & bike$경도 < 127.5,]
seoul_bike <- seoul_bike[,c(17,4,5,6)]
seoul_bike$제공기관명 <- as.factor(seoul_bike$제공기관명)
seoul_bike$위도 <- as.numeric(seoul_bike$위도)
seoul_bike$경도 <- as.numeric(seoul_bike$경도)
seoul_bike$보관대수 <- as.numeric(seoul_bike$보관대수)
str(seoul_bike)
ggmap(seoul) + geom_point(data = seoul_bike, aes(x = 위도, y = 경도))
ggmap(seoul_bike) + geom_point(data = seoul_bike, aes(x = 위도, y = 경도))
library(ggmap)
ggmap(seoul_bike) + geom_point(data = seoul_bike, aes(x = 위도, y = 경도))
ggmap(get_map(location="sorth korea", zoom = 7, source = "google", maptype = "toner"))
ggmap(get_map(seoul_bike)) + geom_point(data = seoul_bike, aes(x = 위도, y = 경도))
wifi <- read.csv("~/동아리/R문서(개인)/공간분석/wifi.csv")
map <- get_map(location = "sorth korea", mapytpe = "rodamap", zoom = 7, source = "google", color = "bw")
str(seoul_bike)
bike_map <- get_map(location = "seoul", maptype = "roadmap", zoom = 11, source = "google")
bike_map <- get_map(location = "seoul", maptype = "roadmap", zoom = 11, source = "google", color = bw)
bike_map <- get_map(location = "seoul", maptype = "roadmap", zoom = 11, source = "google", color = "bw")
ggmap(bike_map) + ggplot(data= seoul_bike, mapping = aes(x = 위도, y = 경도))
ggmap(bike_map) + geom_point(data= seoul_bike, mapping = aes(x = 위도, y = 경도))
ggmap(map) + geom_point(data= wifi, aes(x = lon, y = lat, color = company))
str(wifi)
colnames(seoul_bike$위도) <- seoul_bike$lat
colnames(seoul_bike$경도) <- seoul_bike$lon
colnames(seoul_bike$경도) <- "lon"
colnames(seoul_bike$경도) <- c("lon")
str(seoul_bike)
colnames(seoul_bike$위도) <- lat
colnames(seoul_bike$위도) <- "lat"
bike <- read_excel("~/동아리/R문서(개인)/공간분석/전국자전거보관소표준데이터.xls")
str(bike)
seoul_bike <- bike[bike$lat > 37.4 & bike$lat < 38 & bike$lon > 126.8 & bike$lon < 127.5,]
seoul_bike <- seoul_bike[,c(17,4,5,6)]
seoul_bike$제공기관명 <- as.factor(seoul_bike$제공기관명)
seoul_bike$lon <- as.numeric(seoul_bike$lon)
seoul_bike$보관대수 <- as.numeric(seoul_bike$보관대수)
str(seoul_bike)
seoul_bike$lat <- as.numeric(seoul_bike$lat)
seoul_bike$lon <- as.numeric(seoul_bike$lon)
str(seoul_bike)
bike_map <- get_map(location = "seoul", maptype = "roadmap", zoom = 11, source = "google", color = "bw")
ggmap(bike_map) + geom_point(data= seoul_bike, mapping = aes(x = 위도, y = 경도))
ggmap(bike_map) + geom_point(data= seoul_bike, mapping = aes(x = lon, y = lat))
ggmap(bike_map) + geom_point(data= seoul_bike, mapping = aes(x = lon, y = lat, color = 제공기관명))
ggmap(bike_map) + geom_point(data= seoul_bike, mapping = aes(x = lon, y = lat, color = 제공기관명)) +
theme(legend.position = "none")
korea <- getData("GADM", country = "kor", level = 2)
seoul <- korea[korea$id <= 11760]
ggplot(seoul) + geom_polygon(aes(x = long, y = lat))
ggplot(seoul) + geom_polygon(aes(x = long, y = lat),fill = "white", color = "black")
seoul <- korea[korea$id <= 11740]
ggplot(seoul) + geom_polygon(aes(x = long, y = lat),fill = "white", color = "black")
ggplot() + geom_polygon(data = seoul, aes(x = long, y = lat,group = group),fill = "white", color = "black")
seoul <- korea[korea$id <= 11740]
ggplot() + geom_polygon(data = seoul, aes(x = long, y = lat,group = group),fill = "white", color = "black")
View(wifi)
seoul <- korea[korea$id <= 11740]
seoul <- korea[korea$id <= 11740,]
ggplot() + geom_polygon(data = seoul, aes(x = long, y = lat,group = group),fill = "white", color = "black")
ggplot() + geom_polygon(data = seoul, aes(x = lon, y = lat,group = group),fill = "white", color = "black")
korea <- getData("GADM", country = "kor", level = 2)
seoul <- korea[korea$id <= 11740,]
ggplot() + geom_polygon(data = seoul, aes(x = long, y = lat,group = group),fill = "white", color = "black")
setwd("~/동아리/R문서(개인)/공간분석/SIG_201905")
korea <- shapefile("~/동아리/R문서(개인)/공간분석/SIG_201905/TL_SCCO_SIG.shp")
korea
ggplot(korea) +
geom_polygon(aes(x = long, y = lat, group = group), fill = "white", color = "bw")
ggplot(korea) +
geom_polygon(aes(x = long, y = lat, group = group), fill = "white", color = "black")
View(korea)
korea_fortify <- fortify(korea, region = "SIG_CD")
korea_fortify <- fortify(korea, region = "SIG_CD")
head(korea)
korea_fortify <- fortify(korea, region = "SIG_CD")
korea_fortify <- fortify(korea,region ="SIG_CD")
?fortify
korea_fortify <- fortify(data = korea,region ="SIG_CD")
korea_fortify <- fortify(korea,region ="SIG_CD")
korea_fortify <- fortify(korea,region ="SIG_CD")
korea_fortify <- fortify(korea,region ="SIG_CD")
korea <- shapefile("~/동아리/R문서(개인)/공간분석/SIG_201905/TL_SCCO_SIG.shp")
korea_fortify <- fortify(korea,region ="SIG_CD")
install.packages("gpclib", type = "source")
library(gpclib)
korea_fortify <- fortify(korea,region ="SIG_CD")
library(gpclib)
korea_fortify <- fortify(korea,region ="SIG_CD")
install.packages("rgeos")
install.packages("maptools")
install.packages("rgeos")
install.packages("maptools")
install.packages("rgdal")
librarty(rgeos)
library(rgeos)
library(maptools)
korea_fortify <- fortify(korea,region ="SIG_CD")
library(maps)
library(mapdata)
library(mapproj)
library(ggmap)
library(raster)
library(readxl)
korea_fortify <- fortify(korea,region ="SIG_CD")
library(rgdal)
korea_fortify <- fortify(korea,region ="SIG_CD")
