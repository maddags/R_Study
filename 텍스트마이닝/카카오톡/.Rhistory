group3 <- c(1,1,2,2,3,3,4,4,5,5)
getmode(group3)
?is()
dice <- 1:6
dice
ad
d
?c()
dice + 1
dice - 1
dice * 2
dice / 2
dice + dice
dice + 1
dice - 1
dice * 2
dice / 2
dice + dice
dice + 1:2
dice + 1:4
letter <- "letter"
letter + 1
letter <- "letter"
TRUE + 1
FALSE + 1
FALSE + letter
letter <- "letter"
TRUE + 1
FALSE + 1
letter + letter
letter + letter
letter <- "letter"
letter + letter
letter <- "letter"
TRUE + 1
FALSE + 1
1 + TRUE
letter + 1
seq(from = 1, to = 20)
seq(from = 1, to = 20, by =2)
seq(from = 1, to = 20, length.out = 4)
seq(from = 1, to = 20)
seq(from = 1, to = 20, by =2)
seq(from = 1, to = 20, length.out = 5)
seq(from = 1, to = 20)
seq(from = 1, to = 20, by =2)
seq(from = 1, to = 20, length.out = 5)
rep(1, time = 3)
rep(1:4, each = 3)
rep(dice, each = 2, time = 5)
rep(1, time = 3)
rep(1:4, each = 3)
rep(dice, time = 2)
rep(dice, each = 2, time = 5)
seq(letter)
seq(letter, by = 2)
seq(letter)
rep(letter, time = 3)
rep(letter, each = 2)
rep(letter, time=3, each =2)
word <- c("w","o","r","d")
rep(word, time = 3)
rep(word, each = 2)
rep(word, time=3, each =2)
seq(word, by = 2)
seq(from = "A", to ="Z")
word <- c("w","o","r","d")
rep(word, time = 3)
rep(word, each = 2)
rep(word, time=3, each =2)
dice[2]
dice[3:4]
word[3]
word[2:3]
dice[2]
word[3]
dice[3:4]
word[2:3]
dice[-2]
word[-4]
dice[-1:-4]
word[-1:-3]
paste("a","b","c", seq =",")
paste(word, seq="/")
paste(1,2,3,seq = "")
paste("a","b","c", seq ="-")
paste(word, seq="/")
paste(1,2,3,seq = "")
paste("a","b","c", seq =-)
paste("a","b", seq = ",")
paste(word, seq="/")
paste(1,2,3,seq = "")
paste("a","b", seq = ",")
paste(word,"a" seq="/")
paste("a","b", seq = ",")
paste(word,"a", seq="/")
paste(1,2,3,seq = "")
paste("a","b", seq = ",")
paste(word,"a", seq="/")
paste(1,2,3,seq = "")
paste("a","b", seq = ",")
paste(word,"a", seq="/")
paste(1,2,3,seq = "")
?paste
paste(dice)
paste(dice,collapse = "-")
paste(dice,collapse = "-", seq = ",")
paste(dice,collapse = "-")
paste(dice,seq = "-")
paste(dice,seq = "짱")
paste(dice,seq = "짱", collapse = "")
paste(dice,seq = "짱")
paste("a","b", collapse = ",")
paste(word,"a", seq="/")
paste("a","b", collapse = ",")
paste(word,"a", seq="/")
paste("a","b", collapse = "")
paste(word,"a", seq="/")
paste(word, collapse = "/")
paset(word, seq = "/")
paste(word, seq = "/")
paste(word, collapse = "/")
paste(word, seq = "/")
paste(word, seq = "/", collapse = "1")
paste(word, collapse = "/")
paste(word, seq = "/")
paste(word,dice)
paste(word,dice)
paste(word, collapse = "/")
paste(word, seq = "/")
paste(word,dice)
paste(word,dice, seq = "-")
paste(word,dice)
paste(dice, seq = "번째")
paste(word,dice)
paste(dice, seq = "번째")
paste(word,dice, seq = "개")
paste(word,dice)
paste(dice, seq = "번째")
paste(word,dice, seq = "번")
won <- "만원"
paste(dice,won, collapse = "")
won <- "만원"
paste(dice,won)
paste(dice, collapse = "")
paste(dice, collapse = "")
paste(word, collapse = "-")
menu = c("water", "icecream","juice","coca")
cost = c(1000,2500,2000,1500)
order = paste(menu,:,cost, seq = "원")
menu = c("water", "icecream","juice","coca")
cost = c(1000,2500,2000,1500)
order = paste(menu,":",cost, seq = "원")
order
number <- c(1:500)
number
number[number%%7 == 0]
number <- c(1:100)
number
number[number%%7 == 0]
number <- c(1:100)
number
number[number%%7 == 0]
number <- c(1:100)
number
number[number%%7 == 0]
number <- c(1:100)
number
number[number%%7 == 0]
number <- c(1:100)
number[number%%7 == 0]
word2 <- "Bigdata"
substr(wordw,1,4)
word2 <- "Bigdata"
substr(word2,1,4)
word2 <- "Bigdata"
substr(word2,1,4)
substr(word2,1,6:7)
word2 <- "Bigdata"
substr(word2,1,4)
substr(word2,1,6)
word2 <- "Bigdata"
substr(word2,1,4)
substr(word2,1,5:6)
word2 <- "Bigdata"
substr(word2,1,4)
substr(word2,-1,-2)
rep(substr("apple",2,4), each = 2, time = 2)
rep(c(substr("watermelon",1,5),substr("list",2,3),"H2O"), each = 2, time = 2)
rep(c(substr("watermelon",1,5),substr("list",2,3),"H2O"), time = 2)
rep(sep(c(substr("watermelon",1,5),substr("list",2,3),"H2O"), collapse = ""), time = 2)
rep(seq(c(substr("watermelon",1,5),substr("list",2,3),"H2O"), collapse = ""), time = 2)
rep(paste(c(substr("watermelon",1,5),substr("list",2,3),"H2O"), collapse = ""), time = 2)
rep(paste(c(substr("watermelon",1,5),substr("list",2,3),"H2O"), collapse = " "), time = 2)
rm(list = lst())
rm(list = ls())
dice <- c(1:6)
sample(dice, size = 2, replace = F)
sample(dice, size = 3, replace = F, prob = c(0.1,0.1,0.1,0.1,0.1,0.5))
dice <- c(1:6)
sample(dice, size = 2, replace = F)
sample(dice, size = 3, replace = F, prob = c(0.1,0.1,0.1,0.1,0.1,0.5))
dice <- c(1:6)
sample(dice, size = 2, replace = F)
sample(dice, size = 3, replace = F, prob = c(0.1,0.1,0.1,0.1,0.1,0.5))
dice <- c(1:6)
sample(dice, size = 2, replace = F)
sample(dice, size = 3, replace = F, prob = c(0.1,0.1,0.1,0.1,0.1,0.5))
dice <- c(1:6)
sample(dice, size = 2, replace = F)
sample(dice, size = 3, replace = F, prob = c(0.1,0.1,0.1,0.1,0.1,0.5))
dice <- c(1:6)
sample(dice, size = 2, replace = F)
sample(dice, size = 3, replace = F, prob = c(0.1,0.1,0.1,0.1,0.1,0.5))
dice <- c(1:6)
sample(dice, size = 2, replace = F)
sample(dice, size = 3, replace = F, prob = c(0.1,0.1,0.1,0.1,0.1,0.5))
dice <- c(1:6)
sample(dice, size = 2, replace = F)
sample(dice, size = 3, replace = T, prob = c(0.1,0.1,0.1,0.1,0.1,0.5))
dice <- c(1:6)
sample(dice, size = 2, replace = F)
sample(dice, size = 3, replace = T, prob = c(0.1,0.1,0.1,0.1,0.1,0.5))
dice <- c(1:6)
sample(dice, size = 2, replace = F)
sample(dice, size = 3, replace = T, prob = c(0.1,0.1,0.1,0.1,0.1,0.5))
dice <- c(1:6)
sample(dice, size = 2, replace = F)
sample(dice, size = 3, replace = T, prob = c(0.1,0.1,0.1,0.1,0.1,0.5))
round(3.1415,digits = 2)
round(3.1415,digits = 0)
append(vec_1,vec_2)
vec_1 <- c(1,2,3)
vec_2 <- c("a","b","c")
append(vec_1,vec_2)
?append()
append(dice,vec_1,vec_2)
append(dice,c(vec_1,vec_2))
append(dice,vec_1)
append(vec_1,vec_2,after = 1)
append(vec_1,vec_2,after = 2)
nchar("dice")
typeof("dice")
typeof(dice)
str(dice)
str("dice")
?glm
library(readxl)
#practice1 -> (남자,여자) = (1,0) / practice2 -> (남자,여자) = (0,1)
practice1 <- read_excel("~/동아리/R문서(개인)/회귀분석/회귀분석(로지스틱_독립가변수_예제1).xlsx")
practice2 <- read_excel("~/동아리/R문서(개인)/회귀분석/회귀분석(로지스틱_독립가변수_예제2).xlsx")
y1 <- as.vector(practice1$총소요시간)
practice1
summary(practice1)
str(practice1)
glm(data = practice1, practice1$총소요시간 ~ practice1$적성검사점수 + practice1$성별, family = gaussian)
aa <- glm(data = practice1, practice1$총소요시간 ~ practice1$적성검사점수 + practice1$성별, family = gaussian)
aa
aa <- glm(data = practice1, practice1$총소요시간 ~ practice1$적성검사점수 + practice1$성별, family = binomial)
aa <- glm(data = practice1, practice1$총소요시간 ~ practice1$적성검사점수 + practice1$성별, family = gaussian
aa
aa
rm(list = ls())
data(iris)
iris
a <- subset(iris, Species == "setosa" or Species == "versicolor")
a <- subset(iris, Species == "setosa" | Species == "versicolor")
a
str(a)
a$Species <- as.factor(a$Species)
str(a)
a$Species <- factor(a$Species)
str(a)
glm(Species ~ Sepal.Length, data= a, family = binomial)
summary(glm(Species ~ Sepal.Length, data= a, family = binomial))
b <- glm(Species ~ Sepal.Length, data= a, family = binomial)
coef(b)
?fitted
g <- glm(p_male ~ male, family = binomial, weights = total)
temp <- c(27.2, 27.7, 28.3, 28.4, 29.9) # 온도
male <- c(2, 17, 26, 19, 27) # 각 온도에서 수컷으로 부화한 알 개수
female <- c(25, 7, 4, 8, 1) # 각 온도에서 암컷으로 부화한 알 개수
total <- male + female
p_male <- male / total
g <- glm(p_male ~ male, family = binomial, weights = total)
g
g <- glm(p_male ~ male, family = binomial)
g <- glm(p_male ~ male, family = binomial, weights= total)
g
summary(g)
g <- glm(p_male ~ temp, family = binomial, weights= total)
g
summary(g)
summary(g)
phat1 <- coefficients(g)[1] + coefficients(g)[2]
phat1
phat1 <- coefficients(g)[1] + coefficients(g)[2]*temp
phat1
phat_tr <- exp(phat1)
phat_tr
rbind(temp,phat_tr)
iris
head(iris,50)
iris$Species == "setosa"
iris[iris$Species == "setosa",]
iris[,iris$Species == "setosa"]
iris[iris$Species == "setosa",]
"sum"
4
iris[iris$Species == "setosa",c(1:4)]
library(foreign)
library(fastDummies)
a <- read.spss("koweps_hp01_13_long_beta1.sav", use.value.labels = TRUE, to.data.frame = FALSE)
head(a,10)
install.packages("googleVis")
library(googleVis)
data(Fruits)
View(Fruits)
map1 <- gvisMotionChart(Fruits, idvar="Fruit", timevar = "Year")
map1
plot(M1)
plot(map1)
plot(map1)
?googleVis
g2 <- gvisGeoChart(Exports, "Country", "Profit", options = list(region = "150"))
plot(g2)
dim(my.TDM.m)
kakao <- readLines("~/동아리/R문서(개인)/텍스트마이닝/카카오톡/kakao_ver.2.txt")
kakao <- iconv(kakao,"UTF-8")
View(kakao)
View(kakao)
library(KoNLP)
library(wordcloud)
library(dplyr)
library(tm)
library(stringr)
library(KoNLP)
library(KoNLP)
install.packages("rlang")
library(KoNLP)
install.packages("KoNLP")
library(KoNLP)
install.packages("vctrs")
library(KoNLP)
library(wordcloud)
library(dplyr)
library(tm)
library(stringr)
useSejongDic
useSejongDic()
kko_1 <- kakao[-2]
View(kko_1)
kko_1 <- kakao[3:]
kko_1 <- kakao[-4]
View(kko_1)
kko_2 <- gsub("[[]+[]]","",kko_1)
head(kko_2,20)
kko_2 <- gsub("[[].+[]]","",kko_1)
head(kko_2,20)
kko_3 <- gsub("이모티콘","",kko_2)
kko_4 <- gsub("사진","",kko_3)
View(kko_4)
View(kko_4)
library(KoNLP)
library(KoNLP)
library(dplyr)
library(stringr)
library(tm)
library(wordcloud)
library(RColorBrewer)
install.packages("digest")
install.packages("digest")
library(KoNLP)
useSejongDic()
setwd("~/동아리/R문서(개인)/텍스트마이닝/카카오톡")
test <- readLines("~/동아리/R문서(개인)/텍스트마이닝/카카오톡/kakao_practice.txt")
test <- iconv(test,"UTF-8")
test <- readLines("~/동아리/R문서(개인)/텍스트마이닝/카카오톡/kakao_practice.txt")
test <- iconv(test,"UTF-8")
test <- readLines("~/동아리/R문서(개인)/텍스트마이닝/카카오톡/kakao_practice.txt")
View(test)
test <- gsub("[.!]","",test)
test <- gsub("[ㅜ]","",test)
View(test)
test <- gsub("[.!]","",test)
test <- gsub("[ㅜ]","",test)
View(test)
test1 <- gsub("[.!]","",test)
test2 <- gsub("[ㅜ]","",test1)
View(test)
test1 <- gsub("[.+]","",test)
test2 <- gsub("[ㅠ]","",test1)
View(test)
test1 <- gsub("(.!)","",test)
test2 <- gsub("[ㅠ]","",test1)
View(test)
test1 <- gsub("(.+)","",test)
test2 <- gsub("[ㅠ]","",test1)
View(test)
test1 <- gsub("(.)+","",test)
test2 <- gsub("[ㅠ]","",test1)
View(test)
test1 <- gsub("[.]+","",test)
test2 <- gsub("[ㅠ]","",test1)
View(test)
test1 <- gsub(".+","",test)
test2 <- gsub("[ㅠ]","",test1)
View(test)
test1 <- gsub("...","",test)
test2 <- gsub("[ㅠ]","",test1)
View(test)
test1 <- gsub("[...]","",test)
test2 <- gsub("[ㅠ]","",test1)
View(test)
test2 <- gsub("[ㅠ]","",test1)
View(test)
test2 <- gsub("ㅠ","",test1)
View(test)
test2 <- gsub("[ㅏ-ㅣ]","",test1)
View(test)
test2 <- gsub("(ㅜ|ㅠ)+","",test1)
View(test)
test <- readLines("~/동아리/R문서(개인)/텍스트마이닝/카카오톡/kakao_practice.txt")
View(test)
test1 <- gsub("[!]","",test)
View(test1)
test2 <- gsub("(ㅜ|ㅠ)+","",test1)
View(test)
test2 <- gsub("(ㅠ)+","",test1)
View(test)
View(test)
test2 <- gsub("(ㅠㅠ)+","",test1)
View(test)
test2 <- gsub("(ㅜ|ㅠ)+","",test1)
View(test)
test3 <- na.omit(test2)
View(test3)
test4 <- Filter(function(x){x != ""},test3)
View(test4)
test5 <- useSejongDic(test4)
test5 <- as.character(test4)
View(test5)
str(test4)
str(test5)
test6 <- SimplePos09(test5)
View(test6)
test7 <- SimplePos22(test5)
View(test7)
test6_1 <- paste(test6)
View(test6_1)
test7_1 <- paste(test7)
View(test7_1)
test6_2 <- str_match(test6_1, "[ㄱ-힣]+N")
View(test6_@)
View(test6_2)
test6_2 <- str_match(test6_1, "[ㄱ-힣]+N")
View(test6_2)
?str_match
strings <- c(" 219 733 8965", "329-293-8753 ", "banana", "595 794 7569",
"387 287 6718", "apple", "233.398.9187  ", "482 952 3315",
"239 923 8115 and 842 566 4692", "Work: 579-499-7527", "$1000",
"Home: 543.355.3679")
phone <- "([2-9][0-9]{2})[- .]([0-9]{3})[- .]([0-9]{4})"
str_extract(strings, phone)
str_match(strings, phone)
str_match_all(strings, phone)
test6_2 <- str_match(test6_1, "[ㄱ-힣].+N")
View(test6_@)
View(test6_2)
test6_2 <- str_match(test6_1, "([ㄱ-힣]+)/N")
View(test6_2)
test6_2 <- str_match(test6_1, "([ㄱ-힣]+)/N)")
test6_2 <- str_match(test6_1, "([ㄱ-힣]+)/N")
View(test6_2)
str_match(strings, phone)
test6_2 <- str_match(test6_1, "([ㄱ-힣]+)/N{2}[,]([ㄱ-힣]+)/N{3}")
View(test6_2)
View(test6_2)
test6_2 <- str_match(test6_1, "([ㄱ-힣]+)/N{2}([ㄱ-힣]+)/N")
View(test6_2)
test6_2 <- str_match(test6_1, "([ㄱ-힣]+)/N")
View(test6_2)
list(감사합니다 = "감사/N+하/X+ㅂ니다/E", 이제 = "이제/M", 아랑 = "아랑/N", 프레이아 = "프레이아/N", 메이남았네 = "메이남았네/N", 요 = "요/M")
(감사합니다 = "감사/N+하/X+ㅂ니다/E", 이제 = "이제/M", 아랑 = "아랑/N", 프레이아 = "프레이아/N", 메이남았네 = "메이남았네/N", 요 = "요/M")
str(감사합니다 = "감사/N+하/X+ㅂ니다/E", 이제 = "이제/M", 아랑 = "아랑/N", 프레이아 = "프레이아/N", 메이남았네 = "메이남았네/N", 요 = "요/M")
lsit(감사합니다 = "감사/N+하/X+ㅂ니다/E", 이제 = "이제/M", 아랑 = "아랑/N", 프레이아 = "프레이아/N", 메이남았네 = "메이남았네/N", 요 = "요/M")
list(감사합니다 = "감사/N+하/X+ㅂ니다/E", 이제 = "이제/M", 아랑 = "아랑/N", 프레이아 = "프레이아/N", 메이남았네 = "메이남았네/N", 요 = "요/M")
View(test6)
test5_1 <- extractNoun(test5)
View(test5_1)
test5_1_1 <- Corpus(VectorSource(test5_1))
View(test5_1_1)
test5_1_2 <- TermDocumentMatrix(test5_1_1, control = list(removePunctution = T))
View(test5_1_2)
test5_1_3 <- as.matrix(test5_1_2)
View(test5_1_3)
test5_1_2 <- TermDocumentMatrix(test5_1_1, control = list(removePunctution = T))
View(test5_1_2)
test5_1_3 <- as.matrix(test5_1_2)
View(test5_1_3)
test5_1_1 <- Corpus(VectorSource(test5_1))
View(test5_1_1)
test5_1_1_1 <- as.chararcter(test5_1_1)
test5_1_1_1 <- as.character(test5_1_1)
View(test5_1_1_1)
test5_1_1_2 <- TermDocumentMatrix(test5_1_1_1, control = list(removePunctuation = T)
test5_1_1_3 <- as.matrix(test5_1_1_2)
test5_1_1_2 <- TermDocumentMatrix(test5_1_1_1, control = list(removePunctuation = T)
test5_1_1_3 <- as.matrix(test5_1_1_2)
test5_1_1_2 <- TermDocumentMatrix(test5_1_1_1, control = list(removePunctuation = T)
test5_1_1_2 <- TermDocumentMatrix(test5_1_1_1, control = list(removePunctuation = T))
test5_1_1_2 <- TermDocumentMatrix(test5_1_1_1, control = list(removePunctuation = T))
