paste(word, seq="/")
paste(1,2,3,seq = "")
paste("a","b","c", seq ="-")
paste(word, seq="/")
paste(1,2,3,seq = "")
paste("a","b","c", seq =-)
paste("a","b", seq = ",")
paste(word, seq="/")
paste(1,2,3,seq = "")
paste("a","b", seq = ",")
paste(word,"a" seq="/")
paste("a","b", seq = ",")
paste(word,"a", seq="/")
paste(1,2,3,seq = "")
paste("a","b", seq = ",")
paste(word,"a", seq="/")
paste(1,2,3,seq = "")
paste("a","b", seq = ",")
paste(word,"a", seq="/")
paste(1,2,3,seq = "")
?paste
paste(dice)
paste(dice,collapse = "-")
paste(dice,collapse = "-", seq = ",")
paste(dice,collapse = "-")
paste(dice,seq = "-")
paste(dice,seq = "짱")
paste(dice,seq = "짱", collapse = "")
paste(dice,seq = "짱")
paste("a","b", collapse = ",")
paste(word,"a", seq="/")
paste("a","b", collapse = ",")
paste(word,"a", seq="/")
paste("a","b", collapse = "")
paste(word,"a", seq="/")
paste(word, collapse = "/")
paset(word, seq = "/")
paste(word, seq = "/")
paste(word, collapse = "/")
paste(word, seq = "/")
paste(word, seq = "/", collapse = "1")
paste(word, collapse = "/")
paste(word, seq = "/")
paste(word,dice)
paste(word,dice)
paste(word, collapse = "/")
paste(word, seq = "/")
paste(word,dice)
paste(word,dice, seq = "-")
paste(word,dice)
paste(dice, seq = "번째")
paste(word,dice)
paste(dice, seq = "번째")
paste(word,dice, seq = "개")
paste(word,dice)
paste(dice, seq = "번째")
paste(word,dice, seq = "번")
won <- "만원"
paste(dice,won, collapse = "")
won <- "만원"
paste(dice,won)
paste(dice, collapse = "")
paste(dice, collapse = "")
paste(word, collapse = "-")
menu = c("water", "icecream","juice","coca")
cost = c(1000,2500,2000,1500)
order = paste(menu,:,cost, seq = "원")
menu = c("water", "icecream","juice","coca")
cost = c(1000,2500,2000,1500)
order = paste(menu,":",cost, seq = "원")
order
number <- c(1:500)
number
number[number%%7 == 0]
number <- c(1:100)
number
number[number%%7 == 0]
number <- c(1:100)
number
number[number%%7 == 0]
number <- c(1:100)
number
number[number%%7 == 0]
number <- c(1:100)
number
number[number%%7 == 0]
number <- c(1:100)
number[number%%7 == 0]
word2 <- "Bigdata"
substr(wordw,1,4)
word2 <- "Bigdata"
substr(word2,1,4)
word2 <- "Bigdata"
substr(word2,1,4)
substr(word2,1,6:7)
word2 <- "Bigdata"
substr(word2,1,4)
substr(word2,1,6)
word2 <- "Bigdata"
substr(word2,1,4)
substr(word2,1,5:6)
word2 <- "Bigdata"
substr(word2,1,4)
substr(word2,-1,-2)
rep(substr("apple",2,4), each = 2, time = 2)
rep(c(substr("watermelon",1,5),substr("list",2,3),"H2O"), each = 2, time = 2)
rep(c(substr("watermelon",1,5),substr("list",2,3),"H2O"), time = 2)
rep(sep(c(substr("watermelon",1,5),substr("list",2,3),"H2O"), collapse = ""), time = 2)
rep(seq(c(substr("watermelon",1,5),substr("list",2,3),"H2O"), collapse = ""), time = 2)
rep(paste(c(substr("watermelon",1,5),substr("list",2,3),"H2O"), collapse = ""), time = 2)
rep(paste(c(substr("watermelon",1,5),substr("list",2,3),"H2O"), collapse = " "), time = 2)
rm(list = lst())
rm(list = ls())
dice <- c(1:6)
sample(dice, size = 2, replace = F)
sample(dice, size = 3, replace = F, prob = c(0.1,0.1,0.1,0.1,0.1,0.5))
dice <- c(1:6)
sample(dice, size = 2, replace = F)
sample(dice, size = 3, replace = F, prob = c(0.1,0.1,0.1,0.1,0.1,0.5))
dice <- c(1:6)
sample(dice, size = 2, replace = F)
sample(dice, size = 3, replace = F, prob = c(0.1,0.1,0.1,0.1,0.1,0.5))
dice <- c(1:6)
sample(dice, size = 2, replace = F)
sample(dice, size = 3, replace = F, prob = c(0.1,0.1,0.1,0.1,0.1,0.5))
dice <- c(1:6)
sample(dice, size = 2, replace = F)
sample(dice, size = 3, replace = F, prob = c(0.1,0.1,0.1,0.1,0.1,0.5))
dice <- c(1:6)
sample(dice, size = 2, replace = F)
sample(dice, size = 3, replace = F, prob = c(0.1,0.1,0.1,0.1,0.1,0.5))
dice <- c(1:6)
sample(dice, size = 2, replace = F)
sample(dice, size = 3, replace = F, prob = c(0.1,0.1,0.1,0.1,0.1,0.5))
dice <- c(1:6)
sample(dice, size = 2, replace = F)
sample(dice, size = 3, replace = T, prob = c(0.1,0.1,0.1,0.1,0.1,0.5))
dice <- c(1:6)
sample(dice, size = 2, replace = F)
sample(dice, size = 3, replace = T, prob = c(0.1,0.1,0.1,0.1,0.1,0.5))
dice <- c(1:6)
sample(dice, size = 2, replace = F)
sample(dice, size = 3, replace = T, prob = c(0.1,0.1,0.1,0.1,0.1,0.5))
dice <- c(1:6)
sample(dice, size = 2, replace = F)
sample(dice, size = 3, replace = T, prob = c(0.1,0.1,0.1,0.1,0.1,0.5))
round(3.1415,digits = 2)
round(3.1415,digits = 0)
append(vec_1,vec_2)
vec_1 <- c(1,2,3)
vec_2 <- c("a","b","c")
append(vec_1,vec_2)
?append()
append(dice,vec_1,vec_2)
append(dice,c(vec_1,vec_2))
append(dice,vec_1)
append(vec_1,vec_2,after = 1)
append(vec_1,vec_2,after = 2)
nchar("dice")
typeof("dice")
typeof(dice)
str(dice)
str("dice")
?glm
library(readxl)
#practice1 -> (남자,여자) = (1,0) / practice2 -> (남자,여자) = (0,1)
practice1 <- read_excel("~/동아리/R문서(개인)/회귀분석/회귀분석(로지스틱_독립가변수_예제1).xlsx")
practice2 <- read_excel("~/동아리/R문서(개인)/회귀분석/회귀분석(로지스틱_독립가변수_예제2).xlsx")
y1 <- as.vector(practice1$총소요시간)
practice1
summary(practice1)
str(practice1)
glm(data = practice1, practice1$총소요시간 ~ practice1$적성검사점수 + practice1$성별, family = gaussian)
aa <- glm(data = practice1, practice1$총소요시간 ~ practice1$적성검사점수 + practice1$성별, family = gaussian)
aa
aa <- glm(data = practice1, practice1$총소요시간 ~ practice1$적성검사점수 + practice1$성별, family = binomial)
aa <- glm(data = practice1, practice1$총소요시간 ~ practice1$적성검사점수 + practice1$성별, family = gaussian
aa
aa
rm(list = ls())
data(iris)
iris
a <- subset(iris, Species == "setosa" or Species == "versicolor")
a <- subset(iris, Species == "setosa" | Species == "versicolor")
a
str(a)
a$Species <- as.factor(a$Species)
str(a)
a$Species <- factor(a$Species)
str(a)
glm(Species ~ Sepal.Length, data= a, family = binomial)
summary(glm(Species ~ Sepal.Length, data= a, family = binomial))
b <- glm(Species ~ Sepal.Length, data= a, family = binomial)
coef(b)
?fitted
g <- glm(p_male ~ male, family = binomial, weights = total)
temp <- c(27.2, 27.7, 28.3, 28.4, 29.9) # 온도
male <- c(2, 17, 26, 19, 27) # 각 온도에서 수컷으로 부화한 알 개수
female <- c(25, 7, 4, 8, 1) # 각 온도에서 암컷으로 부화한 알 개수
total <- male + female
p_male <- male / total
g <- glm(p_male ~ male, family = binomial, weights = total)
g
g <- glm(p_male ~ male, family = binomial)
g <- glm(p_male ~ male, family = binomial, weights= total)
g
summary(g)
g <- glm(p_male ~ temp, family = binomial, weights= total)
g
summary(g)
summary(g)
phat1 <- coefficients(g)[1] + coefficients(g)[2]
phat1
phat1 <- coefficients(g)[1] + coefficients(g)[2]*temp
phat1
phat_tr <- exp(phat1)
phat_tr
rbind(temp,phat_tr)
libaray(readxl)
library(readxl)
getwd()
pct <- read_excel("C:/Users/madda/Documents/회귀분석(예제문제1).xlsx")
setwd("~/")
setwd("~/동아리/R문서(개인)/회귀분석")
pct <- read_excel("C:/Users/madda/Documents/회귀분석(예제문제1).xlsx")
pct <- read_excel("C:/Users/madda/Documents/회귀분석/회귀분석(예제문제1).xlsx")
pct <- read_excel("C:/Users/madda/Documents/동아리/R문서(개인)/회귀분석/회귀분석(예제문제1).xlsx")
pct
lm_pct <- lm(총소요시간 ~ 적성검사점수 + 성별 + 학력(졸),data = pct, family = gaussian)
lm_pct <- lm(총소요시간 ~ 적성검사점수 + 성별 + '학력(졸)',data = pct, family = gaussian)
lm_pct <- lm(총소요시간 ~ 적성검사점수 + 성별 + `학력(졸)`,data = pct, family = gaussian)
summary(lm_pct)
summary(pct)
str(pct)
pct$`학력(졸)` <- factor(pct$`학력(졸)`)
lm_pct <- lm(총소요시간 ~ 적성검사점수 + 성별 + `학력(졸)`,data = pct, family = gaussian)
pct
str(pct)
lm_pct
pct
lm_pct
str(lm_pct)
summary(lm_pct)
pct <- read_excel("C:/Users/madda/Documents/동아리/R문서(개인)/회귀분석/회귀분석(예제문제1).xlsx")
pct1 <- pct
lm_pct1 <- lm(총소요시간 ~ 적성검사점수 + 성별 + `학력(졸)`,data = pct1, family = gaussian)
pct1 <- pct
pct1$`학력(졸)` <- factor(pct1$`학력(졸)`)
lm_pct1 <- lm(총소요시간 ~ 적성검사점수 + 성별 + `학력(졸)`,data = pct1, family = gaussian)
str(pct)
summary(lm_pct)
pct1$성별 <- factor(pct1$성별)
lm_pct1 <- lm(총소요시간 ~ 적성검사점수 + 성별 + `학력(졸)`,data = pct1, family = gaussian)
str(pct)
str(pct1)
summary(lm_pct)
pct2 <- pct
setwd("~/동아리/R문서(개인)/회귀분석")
pct2 <- read_excel("~/동아리/R문서(개인)/회귀분석/회귀분석(예제문제1_변형).xlsx")
pct2
lm_pct2 <- lm(총소요시간 ~ 적성검사점수 + 남자 + 초졸 +중졸,data = pct2, family = gaussian)
lm_pct2
summary(lm_pct2)
summary(lm_pct)
summary(lm_pct2)
summary(lm_pct)
summary(lm_pct2)
install.packages("VGAM")
library(VGAM)
#install.packages("VGAM")
library(VGAM)
?vglm
data("airquality")
force(airquality)
airquality$data = paste(airquality$Month,":",airquality$Day)
View(airquality)
airquality$data = paste(airquality$Month,"/",airquality$Day)
View(airquality)
plot(airquality$data,airquality$Ozone)
data("airquality")
View(airquality)
library(VGAM)
vglm(data = airquality, Ozone ~ Solar.R + Wind + Temp)
vglm(data = airquality, Ozone ~ Solar.R + Wind + Temp, family = "equliand")
vglm(data = airquality, Ozone ~ Solar.R + Wind + Temp, family = "vglmff")
?vglm
vglm(data = airquality, Ozone ~ Solar.R + Wind + Temp, family = "lsigma" )
?vglmff
vglm(data = airquality, Ozone ~ Solar.R + Wind + Temp, family = "multinomial")
summary(vglm(data = airquality, Ozone ~ Solar.R + Wind + Temp, family = "multinomial")
)
str(airquality)
air <- as.data.frame(airquality,na.rm = T)
View(airquality)
air <- na.omit(airquality)
View(air)
result1 = glm(air, Temp ~ Ozone + Solar.R + Wind, famaily = "equlidian")
?glm
result1 = glm(air, Temp ~ Ozone + Solar.R + Wind, famaily = "gaussian")
result1 = glm(air, Temp ~ Ozone + Solar.R + Wind)
result1 = glm(air, Temp ~ Ozone + Solar.R + Wind)
View(air)
result1 = lm(air, Temp ~ Ozone + Solar.R + Wind)
air <- as.data.frame(na.omit(airquality))
result1 = lm(air, Temp ~ Ozone + Solar.R + Wind)
str(air)
result1 = lm(air, Temp ~ Ozone + Solar.R + Wind)
result1 = lm(air, Temp ~ Ozone + Solar.R + Wind, family = "gaussian")
result1 = lm(air, Temp ~ Ozone + Solar.R + Wind, family = "ucilan")
result1 = lm(air, Temp ~ Ozone + Solar.R + Wind)
result1 = lm(air, Temp ~ Ozone + Solar.R + Wind)
result1 = lm(data = air, formula =  Temp ~ Ozone + Solar.R + Wind)
result1
summary(result1)
library(ggplot2)
air$date = paste(air$Month,"/",air$Day)
ggplot(data = air) +
geom_line(aes(data,Ozone))
str(air)
result1 = lm(data = air, formula =  Temp ~ Ozone + Solar.R + Wind)
#install.packages("VGAM")
library(VGAM)
data("airquality")
air <- as.data.frame(na.omit(airquality))
str(air)
air$date = paste(air$Month,"/",air$Day)
result1 = lm(data = air, formula =  Temp ~ Ozone + Solar.R + Wind)
result1
summary(result1)
View(air)
air$date = paste(air$Month,air$Day)
air$date = as.POSIXct(air$date)
air$date = as.POSIXct(air$date, format = %m%d)
air$date = as.POSIXct(air$date)
str(air)
air$date = paste(air$Month,"",air$Day)
str(air)
air$date = as.POSIXct(air$date, )
air$date = paste(air$Month,air$Day)
air$date = as.Date(air$date,"%m/%d")
str(air)
air$date = paste(air$Month,air$Day)
str(air)
air$date = paste(0,air$Month,0,air$Day)
str(air)
air$date = as.Date(air$date,"%m/%d")
str(air)
air$date = paste(0,air$Month,0,air$Day)
air$date = paste(air$Month,air$Day)
air$date = as.Date(air$date)
str(air)
air$date = paste0(0,air$Month,0,air$Day)
str(air)
air$date = as.Date(air$date)
air$date = as.Date(air$date,"%m/%d")
str(air)
str(air)
result1 = lm(data = air, formula =  Temp ~ Ozone + Solar.R + Wind)
str(air)
air$date = paste0(0,air$Month,0,air$Day)
str(air)
View(air)
air$date = paste0(0000,0,air$Month,0,air$Day)
result1 = lm(data = air, formula =  Temp ~ Ozone + Solar.R + Wind)
air$date = as.Date(air$date,"%m/%d")
str(air)
air$date = paste0(air$Month,air$Day)
result1 = lm(data = air, formula =  Temp ~ Ozone + Solar.R + Wind)
air$date = as.Date(air$date,"%m/%d")
str(air)
air$date = paste0(air$Month,air$Day)
str(air)
air$date = paste0(air$Month,"-",air$Day)
result1 = lm(data = air, formula =  Temp ~ Ozone + Solar.R + Wind)
air$date = as.Date(air$date,"%m/%d")
str(air)
air$date = paste0(air$Month,"-",air$Day)
result1 = lm(data = air, formula =  Temp ~ Ozone + Solar.R + Wind)
str(air)
for(i in 111){
if(air$Day < 10) paste0(0,air$Day)
}
View(air)
air <- as.data.frame(na.omit(airquality))
str(air)
for(i in 111){
if(air$Day < 10) paste0(0,air$Day)
}
View(air)
for(i in 111){
if(air$Day[i] < 10) paste0(0,air$Day[i])
}
View(air)
air$date = paste0(0000,"-,"air$Month,"-",air$Day)
air$date = paste0(0000,"-",air$Month,"-",air$Day)
str(air)
air$date = paste0(2000,"-",air$Month,"-",air$Day)
str(air)
air$date = as.Date(air$date,"%y/%m/%d")
str(air)
air$date = as.Date(air$date)
air$date = paste0(2000,"-",air$Month,"-",air$Day)
air$date = as.Date(air$date)
str(air)
air$date = as.Date(air$date, format = "%m/%d")
str(air)
air$date = as.Date(air$date, format = "%m/%d")
air$data = paste0(format(air$date,"%m"),"/",format(air$date,"%d"))
str(air)
air$date = paste0(format(air$date,"%m"),"/",format(air$date,"%d"))
str(air)
air <- as.data.frame(na.omit(airquality))
air$date = paste0(2000,"-",air$Month,"-",air$Day)
air$date = as.Date(air$date, format = "%m/%d")
air$date = paste0(format(air$date,"%m"),"/",format(air$date,"%d"))
str(air)
air$date = paste0(2000,"-",air$Month,"-",air$Day)
air$date = as.Date(air$date, format = "%m/%d")
str(air)
air <- as.data.frame(na.omit(airquality))
air$date = paste0(2000,"-",air$Month,"-",air$Day)
air$date = as.Date(air$date)
str(air)
air$date = paste0(format(air$date,"%m"),"/",format(air$date,"%d"))
str(air)
as.Date(air$date)
as.Date(air$date, format = "%m/%d")
str(air)
plot(air$date, air$Ozone)
air$date = as.Date(paste0(format(air$date,"%m"),"/",format(air$date,"%d")))
air$date = as.Date(air$date)
air <- as.data.frame(na.omit(airquality))
air$date = paste0(2000,"-",air$Month,"-",air$Day)
air$date = as.Date(air$date)
air$date = paste0(format(air$date,"%m"),"/",format(air$date,"%d"))
str(air)
air$date = as.Date(air$date)
air$date = as.Date(air$date)
air$date = as.Date(air$date, format = "%m/%d")
str(air)
plot(air$date,air$Ozone)
library(ggplot2)
ggplot(air) +
geom_line(aes(x = date, y = Ozone))
ggplot(air) +
geom_line(aes(x = date, y = Ozone)) +
labs(x = "Month")
#install.packages("VGAM")
library(VGAM)
data("airquality")
air <- as.data.frame(na.omit(airquality))
air$date = paste0(2000,"-",air$Month,"-",air$Day)
result1 = lm(data = air, formula =  Temp ~ Ozone + Solar.R + Wind)
air$date = as.Date(air$date)
air$date = paste0(format(air$date,"%m"),"/",format(air$date,"%d"))
air$date = as.Date(air$date, format = "%m/%d")
str(air)
###시각화
ggplot(air) +
geom_line(aes(x = date, y = Ozone)) +
labs(x = "Month")
###시각화
library(ggplot2)
ggplot(air) +
geom_line(aes(x = date, y = Ozone)) +
labs(x = "Month")
result1
plot(result)
plot(result1)
rm(list = ls())
data <- glm(am ~ mpg + hp + wt + qsec, data = mtcars , family ="binomial")
summary(data)
car <- mtcars[,c(1,4,6,7,9)]
step(glm(am ~ 1, car, family = "binomial"), scope = c(lower = ~ 1, upper = ~mpg + hp + wt + qsec), direction = "forward")
b <- glm(am ~ wt + qsec , data = car, family = "binomial")
fitted(b)
View(round(predict(b, newdata = car,type = "response")))
result <- cbind(round(predict(b, newdata = car,type = "response")), mtcars$am)
View(result)
dat <- read.dta("https://stats.idre.ucla.edu/stat/data/ologit.dta")
library(foreign)
dat <- read.dta("https://stats.idre.ucla.edu/stat/data/ologit.dta")
dat
summary(dat)
str(dat)
#foreign 패키지에 read.dta들어있음
library(ggplot2)
#str는 1개의 서수형 변수, 2개의 이항범주형 변수, 1개의 연속변수
gplot(dat, aes(x = apply, y = gpa)) +
geom_boxplot(size = .75) +
geom_jitter(alpha = .5) +
facet_grid(pared ~ public, margins = TRUE) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))
#str는 1개의 서수형 변수, 2개의 이항범주형 변수, 1개의 연속변수
bxplot <- ggplot(dat, aes(x = apply, y = gpa)) +
geom_boxplot(size = .75) +
geom_jitter(alpha = .5) +
facet_grid(pared ~ public, margins = TRUE) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))
bxplot
library(MASS)
library(MASS)
#출처 : https://stats.idre.ucla.edu/r/dae/ordinal-logistic-regression/
install.packages("MASS")
install.packages("MASS")
library(MASS)
m <- polr(apply ~ pared + public + gpa, data = dat, Hess = True)
m <- polr(apply ~ pared + public + gpa, data = dat, Hess = TRUE)
summary(m)
m
#회귀계수에 exponentail취하면 OR(Odds Ratio)이 된다.
exp(coef(m))
